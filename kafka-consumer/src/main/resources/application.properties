# Server Configuration
server.port=8084

# Spring Boot Actuator
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

# Kafka Consumer Configuration
spring.kafka.bootstrap-servers=kafka:9092 # Docker service name
spring.kafka.consumer.group-id=default-consumer-group # Default group, can be overridden in @KafkaListener
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=com.toyota.consumer.config.DovizDeserializer

# PostgreSQL DataSource Configuration
spring.datasource.url=jdbc:postgresql://postgres:5432/toyota_db # Docker service name
spring.datasource.username=user
spring.datasource.password=password
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update # Or validate, none for production with managed schema
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true


# OpenSearch Configuration (for LoggingKafkaConsumer using RestTemplate)
opensearch.url=http://opensearch-node1:9200 # Docker service name for OpenSearch
opensearch.index.doviz-logs=doviz-rate-logs
# opensearch.username=admin # if security is enabled
# opensearch.password=admin # if security is enabled

# Logging
logging.level.com.toyota.consumer=INFO
logging.level.org.springframework.kafka=INFO
logging.level.org.springframework.orm.jpa=INFO
logging.level.org.hibernate.SQL=DEBUG # To see SQL queries
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE # To see SQL query parameters

# Kafka Topics
topic.doviz.rates=doviz_rates
