# Application settings
spring:
  application:
    name: kafka-consumer
  
  # Kafka consumer configuration
  kafka:
    bootstrap-servers: kafka:29092
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      auto-offset-reset: latest #değiştirdim earlieastti
      enable-auto-commit: false
      max-poll-records: 50 # Standard Spring Kafka property for max poll records

  datasource:
    url: jdbc:postgresql://postgres:5432/toyota_rates
    username: postgres
    password: pgadmin
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: validate # Changed from create to validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        jdbc:
          'batch_size': 50 
        order_inserts: true 
        order_updates: true 
  flyway:
    enabled: true # Default is true if on classpath, but explicit is good
    baseline-on-migrate: true
    locations: classpath:db/migration # Default location

# Server Configuration
server:
  port: 8085

# Logging Configuration
logging:
  level:
    root: INFO
    com.toyota: DEBUG
    org.springframework.kafka: INFO

# Application specific Kafka configuration
app:
  kafka:
      consumer:
       group-id: toyota-consumer-group
      topic:
        simple-rates: financial-simple-rates
        
  
# Management and Metrics Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus,metrics,env,loggers,kafkaconsumer # Expose relevant endpoints
  endpoint:
    health:
      show-details: always # Show full health details
      probes:
        enabled: true # Enable k8s style health probes
  metrics:
    tags: # Add common tags to all metrics
      application: ${spring.application.name}
    distribution:
      percentiles-histogram:
        http.server.requests: true # Enable histograms for http request timings
        spring.kafka.listener: true # Enable histograms for Kafka listener processing times
      sla:
        http.server.requests: 100ms, 500ms # Define SLAs for http requests
