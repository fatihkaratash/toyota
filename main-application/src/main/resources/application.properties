# Application info
spring.application.name=main-application
logging.config=classpath:log4j2.xml
app.calculator.config.path=classpath:calculation-config.json
app.subscribers.config.path=classpath:subscribers.json
server.port=8082

# Redis configuration - DOCKER ENVIRONMENT
spring.redis.host=redis
spring.redis.port=6379
spring.redis.database=0
spring.redis.timeout=5000
app.cache.raw-rate.ttl-seconds=15
app.cache.calculated-rate.ttl-seconds=10

# Kafka Configuration - OPTIMIZED FOR REAL-TIME
spring.kafka.bootstrap-servers=kafka:29092
spring.kafka.producer.acks=all
spring.kafka.producer.retries=3
spring.kafka.producer.batch-size=16384
spring.kafka.producer.buffer-memory=33554432
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Kafka Topic Names - SIMPLIFIED ARCHITECTURE
app.kafka.topic.raw-rates=financial-raw-rates
app.kafka.topic.calculated-rates=financial-calculated-rates
app.kafka.topic.simple-rates=financial-simple-rates

app.kafka.topic.partitions=1
app.kafka.topic.replication=1

# Provider Authentication Configuration - DOCKER ENVIRONMENT
providers.rest.url=${REST_PROVIDER_URL:http://rest-rate-provider:8080}
providers.rest.username=${CLIENT_REST_USERNAME:rest_kullanici_adi}
providers.rest.password=${CLIENT_REST_PASSWORD:rest_sifre}
providers.tcp.host=${TCP_PROVIDER_HOST:tcp-rate-provider}
providers.tcp.port=${TCP_PROVIDER_PORT:8081}
providers.tcp.username=${CLIENT_TCP_USERNAME:tcp_kullanici_adi}
providers.tcp.password=${CLIENT_TCP_PASSWORD:tcp_sifre}

# Thread Pool Configuration - OPTIMIZED FOR PIPELINE
app.subscriber.threadpool.coreSize=5
app.subscriber.threadpool.maxSize=10
app.subscriber.threadpool.queueCapacity=25
app.pipeline.threadpool.coreSize=3
app.pipeline.threadpool.maxSize=8
app.pipeline.threadpool.queueCapacity=15

# Provider Configuration
app.provider.tcp.default-port=8081
app.provider.rest.default-port=8080

# Resilience4j Configuration
resilience4j.retry.configs.default.maxAttempts=3
resilience4j.retry.configs.default.waitDuration=500ms
resilience4j.retry.configs.default.retryExceptions=java.io.IOException,java.util.concurrent.TimeoutException,org.springframework.web.reactive.function.client.WebClientRequestException,org.springframework.web.reactive.function.client.WebClientResponseException$ServiceUnavailable

resilience4j.circuitbreaker.configs.default.failureRateThreshold=50
resilience4j.circuitbreaker.configs.default.slowCallRateThreshold=100
resilience4j.circuitbreaker.configs.default.slowCallDurationThreshold=1s
resilience4j.circuitbreaker.configs.default.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.configs.default.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.configs.default.slidingWindowSize=10
resilience4j.circuitbreaker.configs.default.minimumNumberOfCalls=5
resilience4j.circuitbreaker.configs.default.waitDurationInOpenState=30s
resilience4j.circuitbreaker.configs.default.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.circuitbreaker.configs.default.recordExceptions=java.io.IOException,java.util.concurrent.TimeoutException,org.springframework.web.reactive.function.client.WebClientRequestException
# Logging Configuration
logging.level.root=INFO
logging.level.org.springframework=INFO
logging.level.com.toyota=DEBUG
logging.level.com.toyota.tcpserver=DEBUG
logging.level.org.springframework.web.client=INFO
logging.level.org.springframework.http=INFO
logging.level.org.springframework.web.reactive.function.client=INFO
logging.level.reactor.netty.http.client=INFO

# Cache Configuration
app.cache.key-prefix=toyota_rates
app.cache.cleanup-enabled=true

# Strategy Configuration  
app.strategy.fallback.enabled=true
app.strategy.metrics.enabled=true

# JSON Configuration Loading
app.config.enable-validation=true
app.config.fail-on-missing=false